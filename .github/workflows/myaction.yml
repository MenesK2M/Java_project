# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      
      - name: Set up JDK 11 for x64
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
          architecture: x64
          
      - name: Build with Maven
        run: mvn -B package --file pom.xml
        
      - name: publish to artifactory
        uses: advancedcsg-open/action-jfrog-cli@master
        with:
          url: ${{ secrets.ARTIFACTORY_URL }}
          credentials type: 'apikey'
          apikey: ${{ secrets.ARTIFACTORY_API_KEY }}
          args: u "webapp/target/webapp.war" "artifactory/libs-snapshot-local/"
        
      - uses: mr-smithers-excellent/docker-build-push@v6
        name: Build & push Docker image
        with:
          image: menesk2m/action-car-apps
          tags: ${{ github.run_id }}
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Find and Replace
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          find: "image:*"
          replace: "image: menesk2m/car-brand-choice:${{ github.run_id }}"
          include: "**car-deploy.yml" # Will match all README.md files in any nested directory
